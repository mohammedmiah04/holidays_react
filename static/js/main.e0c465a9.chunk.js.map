{"version":3,"sources":["Loading.js","Tour.js","Tours.js","App.js","index.js"],"names":["Loading","className","Tour","id","image","info","price","name","removeTour","useState","readMore","setReadMore","src","alt","substring","onClick","Tours","tours","map","tour","key","App","loading","setLoading","setTours","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTours","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAUeA,EARC,WACd,OACE,yBAAKC,UAAU,WACb,4CCmBSC,EAtBF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EAC7BC,oBAAS,GADoB,mBACtDC,EADsD,KAC5CC,EAD4C,KAE7D,OACE,6BAASV,UAAU,eACjB,yBAAKW,IAAKR,EAAOS,IAAKN,IACtB,gCACE,yBAAKN,UAAU,aACb,4BAAKM,GACL,4BAAKD,IAEP,2BAAII,EAAWL,EAAH,UAAaA,EAAKS,UAAU,EAAG,KAA/B,QACZ,4BAAQC,QAAS,kBAAMJ,GAAaD,KACjCA,EAAW,YAAc,aAE5B,4BAAQT,UAAU,aAAac,QAAS,kBAAMP,EAAWL,KAAzD,qBCKOa,EAlBD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOT,EAAiB,EAAjBA,WACtB,OACE,iCACE,yBAAKP,UAAU,SACb,+CACA,yBAAKA,UAAU,cACf,6BACGgB,EAAMC,KAAI,SAACC,GACV,OACE,kBAAC,EAAD,eAAMC,IAAKD,EAAKhB,IAAQgB,EAAxB,CAA8BX,WAAYA,YCwDzCa,MA7Df,WAAgB,IAAD,EACiBZ,oBAAS,GAD1B,mBACNa,EADM,KACGC,EADH,OAEad,mBAAS,IAFtB,mBAENQ,EAFM,KAECO,EAFD,KAUPC,EAAU,uCAAG,8BAAAC,EAAA,6DAEjBH,GAAW,GAFM,kBAKMI,MAjBf,8CAYS,cAKXC,EALW,gBAMGA,EAASC,OANZ,OAMXZ,EANW,OAOfM,GAAW,GACXC,EAASP,GARM,kDAUfM,GAAW,GACXO,QAAQC,IAAR,MAXe,0DAAH,qDAoBhB,OALAC,qBAAU,WACRP,MACC,IAGCH,EAGA,8BACE,kBAAC,EAAD,OAKe,IAAjBL,EAAMgB,OAGN,8BACE,yBAAKhC,UAAU,SACb,6CACA,4BAAQA,UAAU,MAAMc,QAASU,GAAjC,aAUN,8BACE,kBAAC,EAAD,CAAOR,MAAOA,EAAOT,WApDN,SAACL,GAElB,IAAM+B,EAAWjB,EAAMkB,QAAO,SAAChB,GAAD,OAAUA,EAAKhB,KAAOA,KACpDqB,EAASU,QCTbE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e0c465a9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <h1>loading...</h1>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\n\nconst Tour = ({ id, image, info, price, name, removeTour }) => {\n  const [readMore, setReadMore] = useState(false);\n  return (\n    <article className=\"single-tour\">\n      <img src={image} alt={name} />\n      <footer>\n        <div className=\"tour-info\">\n          <h4>{name}</h4>\n          <h4>{price}</h4>\n        </div>\n        <p>{readMore ? info : `${info.substring(0, 200)}...`}</p>\n        <button onClick={() => setReadMore(!readMore)}>\n          {readMore ? \"show less\" : \"read more\"}\n        </button>\n        <button className=\"delete-btn\" onClick={() => removeTour(id)}>\n          not interested\n        </button>\n      </footer>\n    </article>\n  );\n};\n\nexport default Tour;\n","import React from \"react\";\nimport Tour from \"./Tour\";\n\nconst Tours = ({ tours, removeTour }) => {\n  return (\n    <section>\n      <div className=\"title\">\n        <h2>Browse Holidays</h2>\n        <div className=\"underline\"></div>\n        <div>\n          {tours.map((tour) => {\n            return (\n              <Tour key={tour.id} {...tour} removeTour={removeTour}></Tour>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Tours;\n","import React, { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport Tours from \"./Tours\";\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = \"https://course-api.com/react-tours-project\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true); // 1 State message until api data recieved\n  const [tours, setTours] = useState([]); // 2. Api data stored in state\n\n  const removeTour = (id) => {\n    // renive tour\n    const newTours = tours.filter((tour) => tour.id !== id);\n    setTours(newTours);\n  };\n\n  const fetchTours = async () => {\n    // 4. fetch data async/await\n    setLoading(true); // 4b toggle loading state to true first for default message\n    try {\n      //4c place fetch request in try catch\n      let response = await fetch(url); // 4d get response from api\n      let tours = await response.json(); // 4eparse the data into json\n      setLoading(false); //4f set Loading to false once data us recieved\n      setTours(tours); // 4g store api data into tours\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTours(); //5. run fetchTours at the start once\n  }, []);\n\n  // conditionals\n  if (loading) {\n    // 3. If loading state is true === loading message comp will load\n    return (\n      <main>\n        <Loading />\n      </main>\n    );\n  }\n\n  if (tours.length === 0) {\n    // once all tours cards are removed and length is 0\n    return (\n      <main>\n        <div className=\"title\">\n          <h2>No Tours Left</h2>\n          <button className=\"btn\" onClick={fetchTours}>\n            refresh\n          </button>\n        </div>\n      </main> // ^^ press the refresh btn to fetch array of tours back\n    );\n  }\n\n  return (\n    //6 if everything is loaded tours will load\n    <main>\n      <Tours tours={tours} removeTour={removeTour} />\n    </main> // ^^ pass down\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}